src/main/java - Папка с java файлами

	model - пакет, содержащий классы, которые содержат данные об играх и рейтинге
		GameList - класс, объект которого содержат данные об 1 игре
		rating - класс, объекты которого содержат данные о рейтинге игроков (1 объект класса - 1 игрок)
		
	utils - пакет, содержащий различные вспомогательные методы, к которым обращаются из разных пакетов и классов
	
	    Convert - Вспомогательный метод для перевода рейтинга из файла Result.txt (они читаются из файла как String) в список объектов rating
		FormatStep - Метод для преобразования формата записи координат ячеек, куда сделан ход. 
					 Преобразует (1 1, 1 2 ... 3 3) в (1,2,3,4...9) , разделитель между координатами значения не имеет
		GameListDB - Вспомогательный статический метод, для вывода списка игр из базы данных
		ListFiles - Вспомогательный статический метод интерфейса Read, для вывода списка файлов , и выбора, какой файл мы хотим прочитать.
		PrintArchive - Метод, возращающий ходы игры ( в виде String ), полученные из объекта класса model.GameList ( возращает весь процесс игры )
		PrintField - Метод возращающий поле текущей игры в формате 1 строки
		
	exceptions - пакет, содержащий кастомные исключения
		CellCheckException - содержит исключения связанныt с данными в массиве cell (поле игры), и переменной win (кто победил/ничья) класса GameList
		PlayerNickLengthException - содержит исключения связанные с длинной имен игроков в классах GameList и Rating
		RatingStatisticException - содержит исключения связанные с классом Rating, переменными win,lose,deadhead, чтобы они не были отрицательными.
		
	test - пакет, содержащий вспомогательные методы для тестов
		CopyBD - Вспомогательный класс для тестов БД.
			CopyTimeBD - Записывает и возращает ArrayList<ResultSet>, которые содержат в себе все записи основных таблиц, 
					 удаляет таблицы, создает новые (временные). Этот метод всегда запускается перед любым тестом, которые работает с БД.
			DeleteTimeBD - Получет ArrayList<ResultSet>, сохраненные из метода CopyBD, удаляет временные таблицы, создает новые и заполняет
					   их данными из ResultSet. Этот метод всегда запускается после любого теста, которые работает с БД.
			
	controller - пакет, содержащий сервлеты (все сервлеты имеют одноименные jsp файлы)
			
		dataBase - сервлет, работает с базой данных
		gameArchive - сервлет, работает с файлами xml и json
		nowGame - сервлет, отвечает за процесс игры 
		playerNick - сервлет, отвечает за ввод имен игроков и создание (и удаление старой) сессии
		rating - сервлет, работает с данными о общем рейтинге
		
	services - пакет, содержащий классы и методы для работы с текущей игрой
		
		CheckWin - Метод, проверяющий условия для победы
		PrintGame - Метод, возвращающий поле текущей игры, полученный из объекта GameList (от PrintArchive отличает тем, 
					что печатает только текущей ход, а не все ходы.
		
	repositores - пакет, содержащий классы, методы и интерфесы работы с БД, json, xml, общим рейтингом (result.txt) 
		
		WriteRead - содержит интерфейсы
			public interface WriteFile - Наследуется классами WriteJSON, WriteXML, отвечающими за запись в файлы xml и json
			public interface Write - Наследуется классами WriteBD, WriteRating отвечающими за запись в бд , запись в файл
			public interface Read - Наследуется классами ReadJSON, ReadXML, ReadBD отвечающим за чтение из файлов xml, json и чтения из БД
			public interface ReadFile - Наследуется классами ReadRating, отвечающими за чтение из файла общего рейтинга
			
		bd - пакет, содержащий классы и методы работы с БД
			CheckNewTableBD - метод, проверяющий есть ли необходимые для работы приложения таблицы в бд, если нет, то создает их.
			ConnectDB - метод, содержащий подключение к БД
			FormatStepBD - класс, содержащий 2 перегруженных метода
				ArrayList<Integer> FormatStepBD (String) - Метод для преобразования шагов игры (в бд он записаны как String) 
														   в массив ArrayList для запись в класс GameList
				String FormatStepBD (ArrayList<Integer>) - Метод для преобразования шагов игры (в GameList они записаны как ArrayList) 
																 в единую строку для записи в БД
			ReadBD - Метод для чтения игры из бд по ее id, и записи ее в строку
			WriteBD - Метод для записи прошедшей игры в бд
			DeleteBD - Метод для очистки базы данных
			
		json - пакет, содержащий классы и методы работы с json форматом
			ReadJSON - Метод, отвечающий за вывод данных из json файла
			serialize - Переопределеная сериализация для записи в json файл, для того, чтобы соответствовать образцу
			WriteJSON - Метод, отвечающий за запись данных в новый json файла (используется библиотека gson)
				
		rating - Пакет, содержащий классы и методы для работы с общим рейтингом
			ReadRating - Метод, ввтаскивает информацию из файла Result.txt (общий рейтинг) и возвращающий ее как 1 строку
			WriteRating - Метод для записи новых данных (после завершения игры) в общий рейтинг
			
		xml - пакет, содержащий классы и методы работы с xml форматом
			ReadXML - Метод, отвечающий за вывод данных из xml файла
			WriteJSON - Метод, отвечающий за запись данных в новый xml файл 
			
src/main/webapp - Папка, содержащая jsp файлы
	
	gameArchive.jsp - работа с xml и json файлами, и печати данных из них на страницу
	index.jsp - содержит только переходы на другие страницы
	nowGame.jsp - отображает процесс текущей игры (если нет текущей сессии, то происходит автоматический переход на страницу с вводом имен игроков)
	playerNick - содержит ввод имен игроков (на серверной стороне при правильном вводе имен игроков создается сессия) и переход к процессу игры
	rating.jsp - показывает данные об общем рейтинге
	resultGame.jsp - полностью показывает ход только что сыгранной игры, очищает сессию, печатает, куда сохранены json и xml файлы с игрой
	deleteBD.jsp - очищает базу данных